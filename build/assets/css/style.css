@charset "UTF-8";@font-face{font-family:'Montserrat Light';src:url(../../static/fonts/Montserrat-Light.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:'Montserrat Regular';src:url(../../static/fontsMontserrat-Regular.woff) format("woff");font-weight:400;font-style:normal}.page{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-tap-highlight-color:transparent;-webkit-text-size-adjust:100%;min-width:320px;min-height:100%}.page__wrapper{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:576px){.page__wrapper{max-width:540px}}@media (min-width:768px){.page__wrapper{max-width:720px}}@media (min-width:992px){.page__wrapper{max-width:960px}}@media (min-width:1200px){.page__wrapper{max-width:1140px}}.page__container{overflow:hidden;height:100vh;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@-ms-viewport{width:device-width}body,html{font-family:'Montserrat',sans-serif}*,:after,:before,html{-webkit-box-sizing:border-box;box-sizing:border-box}*{-webkit-tap-highlight-color:transparent}body{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:0;min-height:100%;word-break:break-word;font-weight:400;font-size:16px;line-height:1.5;text-align:left;color:#1a1a1a;background-color:#fff;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}[tabindex='-1']:focus{outline:0!important}[role=button]{cursor:pointer}[type=search]::-webkit-search-decoration{-webkit-appearance:none}[role=button],a,button,input,label,select,textarea{-ms-touch-action:manipulation;touch-action:manipulation;margin:0}button,input{overflow:visible;text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}svg{fill:currentColor}a svg,button svg{pointer-events:none}svg:not(:root){overflow:hidden}img{max-width:100%;height:auto}a{color:#0275d9;background-color:transparent;-webkit-transition:color .3s;-o-transition:color .3s;transition:color .3s}a:focus,a:hover{color:#014c8d}@media (min-width:1200px){a[href^="tel:"]{white-space:nowrap;pointer-events:none;text-decoration:inherit;color:inherit}}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible;margin-top:2em;margin-bottom:2em;border:0;border-top:1px solid #b3b3b3}h1,h2,h3,h4,h5,h6{margin-top:1em;margin-bottom:.5em;font-family:'Montserrat',sans-serif;font-weight:700;line-height:1.2;color:currentColor}h1{font-size:40px}h2{font-size:32px}h3{font-size:24px}h4{font-size:18px}h5,h6{font-size:16px}address,blockquote,dl,figure,p,table{margin-top:0;margin-bottom:1em}ol,pre,ul{margin-top:0}p{-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto;hyphenate-limit-chars:6 3 3;hyphenate-limit-lines:2;hyphenate-limit-last:always;hyphenate-limit-zone:8%}address{font-style:normal}ol,ul{margin-bottom:1em;padding-left:1.5em}ol ol,ol ul,ul ol,ul ul{margin-top:0;margin-bottom:0}li{line-height:inherit}small,sub,sup{font-size:.75em}b,strong{font-weight:bolder}blockquote{padding:0;margin-left:0;margin-right:0}code,kbd,pre{font-family:SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}code,pre{background-color:rgba(0,0,0,.08)}code,kbd{padding:.06em .3em;color:#1a1a1a;border-radius:3px}kbd{background-color:#e6e6e6}kbd kbd{padding:0}pre{display:block;width:100%;margin-bottom:1em;overflow-x:auto;-moz-tab-size:2;-o-tab-size:2;tab-size:2}pre code{background:0 0}.slick-list,.slick-slider{position:relative;display:block}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-dots li button:focus,.slick-dots li button:hover,.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-initialized .slick-slide,.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-loading .slick-list{background:#fff url(./ajax-loader.gif) center center no-repeat}@font-face{font-family:"slick";src:url(./fonts/slick.eot);src:url(./fonts/slick.eot?#iefix) format("embedded-opentype"),url(./fonts/slick.woff) format("woff"),url(./fonts/slick.ttf) format("truetype"),url(./fonts/slick.svg#slick) format("svg");font-weight:400;font-style:normal}.slick-next,.slick-prev{position:absolute;display:block;height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;background:0 0;color:transparent;top:50%;-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%);padding:0;border:0;outline:0}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{outline:0;background:0 0;color:transparent}.slick-dots li button:focus:before,.slick-dots li button:hover:before,.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{opacity:1}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-dots li button:before,.slick-next:before,.slick-prev:before{font-family:"slick";font-size:20px;line-height:1;color:#fff;opacity:.75;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-prev{left:-25px}[dir=rtl] .slick-prev{left:auto;right:-25px}.slick-prev:before{content:"←"}.slick-next:before,[dir=rtl] .slick-prev:before{content:"→"}.slick-next{right:-25px}[dir=rtl] .slick-next{left:-25px;right:auto}[dir=rtl] .slick-next:before{content:"←"}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{position:absolute;bottom:-25px;list-style:none;display:block;text-align:center;padding:0;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{border:0;background:0 0;display:block;height:20px;width:20px;outline:0;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.slick-dots li button:before{position:absolute;top:0;left:0;content:"•";width:20px;height:20px;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.news-line__wrap{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin-bottom:2.6rem}.news-line__descr{width:620px;text-align:center}.news-line__title{font-size:2.6rem}.news-line__subtitle{font-size:1.1rem}.news{height:300px;width:340px;background:#000}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
